on:
  push:
    paths:
      - ".github/workflows/rust-musl.yml"
      - "Dockerfile.gnu-base"
      - "Dockerfile.musl-base"
    branches:
      - main
      # - workflow-test

  # workflow_dispatch:
  #   inputs:
  #     clean_cache:
  #       description: Clean Docker cache before build, yes/no
  #       default: 'no'
  #       required: false
  # schedule:
  #   - cron: '0 0 1 */2 *'

name: Build Rust MUSL/GNU Base Images

jobs:
  build_vars:
    name: Generate Build Variables
    runs-on: ubuntu-latest
    outputs:
      commitpath: ${{ steps.build_vars.outputs.commitpath }}
      rust_channel: ${{ steps.build_vars.outputs.rust_channel }}
      tag_postfix: ${{ steps.build_vars.outputs.tag_postfix }}
      date: ${{ steps.build_vars.outputs.date }}
      act: ${{ steps.build_vars.outputs.act }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      # Check if this is a scheduled job, if so, set to nightly
      - name: Get build variables
        id: build_vars
        run: |
          #
          # Add env.ACT as an output since GHA does not support env within if checks on some locations
          # See: https://github.com/actions/runner/issues/480
          echo "set-output name=act::${ACT}"
          echo "::set-output name=act::${ACT}"
          #
          # Changed files
          git diff-tree --no-commit-id --name-only -r ${{ github.sha }}
          export COMMITPATH=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }})
          echo "set-output name=commitpath::${COMMITPATH}"
          echo "::set-output name=commitpath::${COMMITPATH}"
          #
          # Date
          export DATE=$(date +'%Y-%m-%d')
          echo "set-output name=date::${DATE}"
          echo "::set-output name=date::${DATE}"
          #
          # Check if this is run via a scheduler, if so we will build the nightly
          if [[ "${{ github.event.schedule }}" == "" ]]; then
            echo "set-output name=rust_channel::stable"
            echo "::set-output name=rust_channel::stable"
            echo "set-output name=tag_postfix::-${DATE}"
            echo "::set-output name=tag_postfix::-${DATE}"
          else
            echo "set-output name=rust_channel::nightly"
            echo "::set-output name=rust_channel::nightly"
            echo "set-output name=tag_postfix::-nightly-${DATE}"
            echo "::set-output name=tag_postfix::-nightly-${DATE}"
          fi

  gnu-base:
    name: Build GNU Base Image
    runs-on: ubuntu-latest
    needs: build_vars
    # Only rebuild the gnu-base if there were changes
    # if: ${{ needs.build_vars.outputs.act || Contains(needs.build_vars.outputs.commitpath, 'Dockerfile.gnu-base') }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      # This action is messing with the host caching when using `act`
      - name: Setup Docker Buildx (setup-buildx-action)
        if: ${{ !env.ACT }}
        uses: docker/setup-buildx-action@v1

      # Use the DOCKER_BUILDKIT=1 env when using `act`
      - name: Setup Docker Buildx (DOCKER_BUILDKIT=1)
        if: ${{ env.ACT }}
        shell: bash
        run: |
          echo "DOCKER_BUILDKIT=1"
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV

      # Do not login when using `act`
      - name: Login to DockerHub
        if: ${{ !env.ACT }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Remote GHA build
      - name: Docker Build (GHA)
        if: ${{ !env.ACT }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.gnu-base
          tags: |
            blackdex/rust-musl:gnu-base
            blackdex/rust-musl:gnu-base-${{ needs.build_vars.outputs.date }}
          push: ${{ !env.ACT }}
          cache-from: type=gha, scope=amd64-gnu-base
          cache-to: type=gha, scope=amd64-gnu-base

      # Local ACT build
      - name: Docker Build (ACT)
        if: ${{ env.ACT }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.gnu-base
          tags: |
            blackdex/rust-musl:gnu-base
            blackdex/rust-musl:gnu-base-${{ needs.build_vars.outputs.date }}
          push: false

  # ###
  # Building the final MUSL Based images including the rust toolchain.
  musl-base:
    name: Build MUSL Base Image - ${{ matrix.env.IMAGE_TAG }}
    needs: [build_vars, gnu-base]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        env:
          - IMAGE_TAG: x86_64-musl
            TARGET: x86_64-unknown-linux-musl
            OPENSSL_ARCH: "linux-x86_64 enable-ec_nistp_64_gcc_128"
          - IMAGE_TAG: armv7-musleabihf
            TARGET: armv7-unknown-linux-musleabihf
            OPENSSL_ARCH: linux-armv4
          - IMAGE_TAG: aarch64-musl
            TARGET: aarch64-unknown-linux-musl
            OPENSSL_ARCH: linux-aarch64
          - IMAGE_TAG: arm-musleabi
            TARGET: arm-unknown-linux-musleabi
            OPENSSL_ARCH: linux-armv4
          - IMAGE_TAG: arm-musleabihf
            TARGET: arm-unknown-linux-musleabihf
            OPENSSL_ARCH: linux-armv4
          - IMAGE_TAG: armv5te-musleabi
            TARGET: armv5te-unknown-linux-musleabi
            OPENSSL_ARCH: linux-armv4
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      # This action is messing with the host caching when using `act`
      - name: Setup Docker Buildx (setup-buildx-action)
        if: ${{ !env.ACT }}
        uses: docker/setup-buildx-action@v1

      # Use the DOCKER_BUILDKIT=1 env when using `act`
      - name: Setup Docker Buildx (DOCKER_BUILDKIT=1)
        if: ${{ env.ACT }}
        shell: bash
        run: |
          echo "DOCKER_BUILDKIT=1"
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV

      # Do not login when using `act`
      - name: Login to DockerHub
        if: ${{ !env.ACT }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build (GHA)
        if: ${{ !env.ACT }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.musl-base
          build-args: |
            TARGET=${{ matrix.env.TARGET }}
            IMAGE_TAG=${{ matrix.env.IMAGE_TAG }}
            OPENSSL_ARCH=${{ matrix.env.OPENSSL_ARCH }}
            RUST_CHANNEL=${{ needs.build_vars.outputs.rust_channel }}
          tags: blackdex/rust-musl:${{ matrix.env.IMAGE_TAG }}-test
          # Do not push the image just yet, we first want to test it
          push: false
          cache-from: type=gha, scope=${{ matrix.env.IMAGE_TAG }}-musl
          cache-to: type=gha, scope=${{ matrix.env.IMAGE_TAG }}-musl

      - name: Docker Build (ACT)
        if: ${{ env.ACT }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.musl-base
          build-args: |
            TARGET=${{ matrix.env.TARGET }}
            IMAGE_TAG=${{ matrix.env.IMAGE_TAG }}
            OPENSSL_ARCH=${{ matrix.env.OPENSSL_ARCH }}
            RUST_CHANNEL=${{ needs.build_vars.outputs.rust_channel }}
          tags: blackdex/rust-musl:${{ matrix.env.IMAGE_TAG }}-test
          # Do not push the image just yet, we first want to test it
          push: false

      - name: Test Docker Image cargo build
        run: |
          docker run --rm \
            -v "$(pwd)/test/dieselmulticrate":/home/rust/src \
            -e RUST_BACKTRACE=1 \
            -e RUSTFLAGS='-C link-arg=-s' \
            blackdex/rust-musl:${{ matrix.env.IMAGE_TAG }}-test cargo build

      - name: Docker Push
        # Do not push images when using act
        if: ${{ !env.ACT }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.musl-base
          build-args: |
            TARGET=${{ matrix.env.TARGET }}
            IMAGE_TAG=${{ matrix.env.IMAGE_TAG }}
            OPENSSL_ARCH=${{ matrix.env.OPENSSL_ARCH }}
            RUST_CHANNEL=${{ needs.build_vars.outputs.rust_channel }}
          tags: |
            blackdex/rust-musl:${{ matrix.env.IMAGE_TAG }}
            blackdex/rust-musl:${{ matrix.env.IMAGE_TAG }}${{ needs.build_vars.outputs.tag_postfix }}
          push: true
          cache-from: type=gha, scope=${{ matrix.env.IMAGE_TAG }}-musl
          cache-to: type=gha, scope=${{ matrix.env.IMAGE_TAG }}-musl

      # - name: setenv
      #   if: github.event.schedule=='*/6 * * * *'         # set-env value
      #   run: |
      #     echo "::set-env name=cronenv::midnight_run"
      # - name: setenv2
      #   if: github.event.schedule=='*/7 * * * *'   # set env value
      #   run: |
      #     echo "::set-env name=cronenv::morning_run"